declare module "resource://app/modules/UITour.sys.mjs" {
    export var UITour: {
        url;
        tourBrowsersByWindow;
        noautohideMenus;
        availableTargetsCache;
        clearAvailableTargetsCache();
        _annotationPanelMutationObservers;
        highlightEffects;
        targets;
        init();
        getNodeFromDocument(aDocument?, aQuery?);
        onPageEvent(aEvent?, aBrowser?);
        initForBrowser(aBrowser?, window?);
        handleEvent(aEvent?);
        observe(aSubject?, aTopic?, aData?);
        _populateURLParams(url?, extraURLParams?);
        teardownTourForBrowser(aWindow?, aBrowser?, aTourPageClosing?);
        removePanelListeners(aWindow?);
        teardownTourForWindow(aWindow?);
        isSafeScheme(aURI?);
        resolveURL(aBrowser?, aURL?);
        sendPageCallback(aBrowser?, aCallbackID?, aData?);
        isElementVisible(aElement?);
        getTarget(aWindow?, aTargetName?, aSticky?);
        targetIsInAppMenu(aTarget?);
        _setMenuStateForAnnotation(aWindow?, aShouldOpen?, aOptions?);
        _ensureTarget(aChromeWindow?, aTarget?, aOptions?);
        _correctAnchor(aChromeWindow?, aTarget?);
        showHighlight(aChromeWindow?, aTarget?, aEffect?, aOptions?);
        _hideHighlightElement(aWindow?);
        hideHighlight(aWindow?);
        showInfo(aChromeWindow?, aAnchor?, aTitle?, aDescription?, aIconURL?, aButtons?, aOptions?);
        getHighlightContainerAndMaybeCreate(document?);
        getTooltipAndMaybeCreate(document?);
        getHighlightAndMaybeCreate(document?);
        isInfoOnTarget(aChromeWindow?, aTargetName?);
        _hideInfoElement(aWindow?);
        hideInfo(aWindow?);
        showMenu(aWindow?, aMenuName?, aOpenCallback?, aOptions?);
        hideMenu(aWindow?, aMenuName?);
        showNewTab(aWindow?, aBrowser?);
        showProtectionReport(aWindow?, aBrowser?);
        _hideAnnotationsForPanel(aEvent?, aShouldClosePanel?, aTargetPositionCallback?);
        onAppMenuHiding(aEvent?);
        onAppMenuSubviewShowing(aEvent?);
        onPanelHidden(aEvent?);
        recreatePopup(aPanel?);
        getConfiguration(aBrowser?, aWindow?, aConfiguration?, aCallbackID?);
        setConfiguration(aWindow?, aConfiguration?, aValue?);
        getFxA(aBrowser?, aCallbackID?);
        getFxAConnections(aBrowser?, aCallbackID?);
        getAppInfo(aBrowser?, aWindow?, aCallbackID?);
        getAvailableTargets(aBrowser?, aChromeWindow?, aCallbackID?);
        addNavBarWidget(aTarget?, aBrowser?, aCallbackID?);
        _addAnnotationPanelMutationObserver(aPanelEl?);
        _removeAnnotationPanelMutationObserver(aPanelEl?);
        _annotationMutationCallback(aMutations?);
        selectSearchEngine(aID?);
        notify(eventName?, params?);
    };
}