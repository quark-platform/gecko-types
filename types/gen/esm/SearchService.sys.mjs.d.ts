declare module "resource://gre/modules/SearchService.sys.mjs" {
    export class SearchService {
        constructor();
        get defaultEngine();
        set defaultEngine(newEngine);
        get defaultPrivateEngine();
        set defaultPrivateEngine(newEngine);
        getDefault();
        setDefault(engine?, changeSource?);
        getDefaultPrivate();
        setDefaultPrivate(engine?, changeSource?);
        get appDefaultEngine();
        get appPrivateDefaultEngine();
        get isInitialized();
        get hasSuccessfullyInitialized();
        getDefaultEngineInfo();
        getEngineByName(engineName?);
        getEngineById(engineId?);
        getEngineByAlias(alias?);
        getEngines();
        getVisibleEngines();
        getAppProvidedEngines();
        getEnginesByExtensionID(extensionID?);
        init();
        runBackgroundChecks();
        reset();
        forceInitializationStatusForTests(status?);
        resetEngineSelector();
        resetToAppDefaultEngine();
        maybeSetAndOverrideDefault(extension?);
        addUserEngine(name?, url?, alias?);
        addEnginesFromExtension(extension?);
        addOpenSearchEngine(engineURL?, iconURL?);
        removeWebExtensionEngine(id?);
        removeEngine(engine?);
        moveEngine(engine?, newIndex?);
        restoreDefaultEngines();
        parseSubmissionURL(url?);
        notify();
        _getEngineDefault(privateMode?);
        _maybeReloadEngines(changeReason?);
        _reloadEngines(settings?, changeReason?);
        _fetchEngineSelectorEngines();
        _sortEnginesByDefaults(engines?);
        _createAndAddEngine();
        _removeObservers();
        observe(engine?, topic?, verb?);
        _makeEngineFromConfig(config?);
        _showRemovalOfSearchEngineNotificationBox(prevCurrentEngineName?, newCurrentEngineName?);
    }
}